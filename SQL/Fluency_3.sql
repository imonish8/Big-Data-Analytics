CREATE DATABASE FLUENCY_3;
USE FLUENCY_3;

-- EMPLOYEE
CREATE TABLE employees (
    employee_id INT PRIMARY KEY,
    first_name VARCHAR(50),
    last_name VARCHAR(50),
    department_id INT,
    manager_id INT,
    hire_date DATE,
    salary DECIMAL(10, 2)
);

-- dEPARTMENT
CREATE TABLE departments (
    department_id INT PRIMARY KEY,
    department_name VARCHAR(50)
);

-- cUSTOMER 

CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    customer_name VARCHAR(100)
);

-- Orders 
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATE,
    total_amount DECIMAL(10, 2),
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Salary history
CREATE TABLE salary_history (
    employee_id INT,
    salary DECIMAL(10, 2),
    salary_date DATE,
    PRIMARY KEY (employee_id, salary_date)
);

-- Insert sample data for employees
INSERT INTO employees (employee_id, first_name, last_name, department_id, manager_id, hire_date, salary)
VALUES 
(1, 'John', 'Doe', 101, 2, '2024-09-25', 55000),
(2, 'Jane', 'Smith', 102, 3, '2024-09-20', 60000),
(3, 'James', 'Brown', 101, NULL, '2024-10-01', 50000),
(4, 'Emily', 'Clark', 103, 2, '2024-10-15', 45000);

-- Insert sample data for departments
INSERT INTO departments (department_id, department_name)
VALUES 
(101, 'Sales'),
(102, 'Marketing'),
(103, 'HR');

ALTER TABLE DEPARTMENTS  DEPARTMENT_ID = 1 WHERE DEPARTMENT_NAME = "Sales";
-- Insert sample data for customers
INSERT INTO customers (customer_id, customer_name)
VALUES 
(1, 'Customer A'),
(2, 'Customer B'),
(3, 'Customer C');

-- Insert sample data for orders
INSERT INTO orders (order_id, customer_id, order_date, total_amount)
VALUES 
(1, 1, '2024-10-01', 500),
(2, 1, '2024-10-03', 300),
(3, 2, '2024-10-04', 700),
(4, 3, '2024-10-07', 200),
(5, 1, '2024-10-10', 400);

INSERT INTO orders (order_id, customer_id, order_date, total_amount)
VALUES 
(6, 3, '2024-11-01', 5000);

SELECT EMPLOYEES.employee_id , EMPLOYEES.first_name,EMPLOYEES.last_name,EMPLOYESS.department_id,EMPLOYEES.manager_id,EMPLOYEES.hire_date,EMPLOYEES.salary,DEPARTMENTS.department_id, DEPARTMENTS.department_name FROM EMPLOYEES AS E JOIN DEPARTMENTS AS D ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID ;
SELECT * FROM CUSTOMERS;
SELECT * FROM ORDERS;
-- Q1
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES JOIN DEPARTMENTS ON  EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID WHERE MANAGER_ID != DEPARTMENTS.DEPARTMENT_ID;

-- Q 2
SELECT * FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID;
SELECT CUSTOMERS.CUSTOMER_ID,COUNT(ORDER_ID) FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID   GROUP BY CUSTOMERS.CUSTOMER_ID HAVING COUNT(ORDER_ID) > 2;

-- Q 3
SELECT * FROM ORDERS;
SELECT ORDER_DATE, SUM(TOTAL_AMOUNT) FROM ORDERS GROUP BY ORDER_DATE;
SELECT EXTRACT(MONTH FROM ORDER_DATE) AS MONTH,
	   SUM(TOTAL_AMOUNT) AS TOTAL 
FROM ORDERS
GROUP BY EXTRACT(MONTH FROM ORDER_DATE)
ORDER BY TOTAL DESC;
#LIMIT 1;

SELECT EXTRACT(YEAR FROM ORDER_DATE) AS YEAR, SUM(TOTAL_AMOUNT) AS TOTAL FROM ORDERS GROUP BY YEAR ORDER BY TOTAL DESC;
SELECT EXTRACT(DAY FROM ORDER_DATE) AS DAY, SUM(TOTAL_AMOUNT) AS TOTAL FROM ORDERS GROUP BY DAY ORDER BY TOTAL DESC;

-- 4 / 5
SELECT * FROM EMPLOYEES JOIN DEPARTMENTS ON DEPARTMENTS.DEPARTMENT_ID = EMPLOYEES.DEPARTMENT_ID;
SELECT DEPARTMENT_NAME , SUM(SALARY), COUNT(EMPLOYEE_ID) AS TOTAL FROM DEPARTMENTS JOIN EMPLOYEES ON EMPLOYEES.DEPARTMENT_ID = DEPARTMENTS.DEPARTMENT_ID GROUP BY DEPARTMENT_NAME ORDER BY TOTAL DESC;

-- 6

-- 7 TRIED
SELECT * FROM ORDERS JOIN CUSTOMERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID;
SELECT CUSTOMERS.CUSTOMER_ID , SUM(ORDER_ID) AS TOTAL FROM CUSTOMERS JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID= ORDERS.CUSTOMER_ID GROUP BY CUSTOMERS.CUSTOMER_ID ORDER BY TOTAL DESC LIMIT 3;

-- FILTERING OUT HIGHEST AND LOWEST THEN AVERAGE

#SELECT FIRST_NAME,(SELECT AVG(SALARY) - MAX(SALARY) - MIN(SALARY) FROM EMPLOYEES) FROM EMPLOYEES;

-- 30 TRIED
SELECT  CUSTOMER_ID  FROM ORDERS HAVING DUPLICATE GROUP BY CUSTOMER_ID;


