CREATE DATABASE AIRPLANE;
USE AIRPLANE;

CREATE TABLE AIRPORT (AIRPORT_CODE VARCHAR(3) PRIMARY KEY,
AIRPORT_NAME VARCHAR(100),
LOCATION VARCHAR(225),
FACILITIES VARCHAR(225));
DESC AIRPORT;

-- 2
INSERT INTO AIRPORT VALUES 
("Chn", "Rajiv Gandhi Airport", "Chennai", "International"),
("Mum", "Gandhi Airport", "Chennai", "International"),
("NDL", "INDIRA Gandhi Airport", "New Delhi", "International"),
("Hyd", "Rahul Gandhi Airport", "Hyd", "National"),
("Ban", "Vallabai Patel Airport", "Banglore", "National"),
("Ker", "Nair Airport", "Kerala", "National");
SELECT * FROM AIRPORT;

CREATE TABLE AIRLINE (AIRLINE_ID INT PRIMARY KEY, 
AIRLINE_NAME VARCHAR(100),
CONTACT_NUMBER VARCHAR(20),
OPERATING_REGION VARCHAR(100));
DESC AIRLINE; 

-- 2
INSERT INTO AIRLINE VALUES
(4000, "Chennai. Airport", "4454354354","Chennai"),
(4001, "Mumbai Airport", "1189302365","Mumbai"),
(4002, "Hyderbad Airport", "3376598745","Hyderbad"),
(4003, "New Delhi Airport", "2234567854","New Delji"),
(4004, "Trivandrum Airport", "5596783423","Trivandrum"),
(4005, "Banglore Airport", "6644543543","Banglore");

-- 2
insert into Airline values
(1568, 'Indigo', 04454354354,'Chennai'), 
(1068,'Indigo', 01189302365, 'Mumbai'),
(1678, 'Vistara', 03376598745, 'Hyderabad'),
(1768,'Vistara', 02234567854,'New Delhi'),
(1888,'Air India', 05596783423,'Trivandrum'), 
(1988, 'Air India', 06644543543, 'Bangalore');

SELECT * FROM AIRLINE;

CREATE TABLE PASSENGER (PASS_ID INT PRIMARY KEY,
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
EMAIL VARCHAR(100),
PASSPORT VARCHAR(20));
DESC PASSENGER;
INSERT INTO PASSENGER VALUES
(1100, "Anu","Krishna", "anu@gmail.com", "AE2039"),
(1101, "Kavin","Kumar", "kavin@gmail.com", "BS9879"),
(1102, "Nandha","Kishore", "nandha@gmail.com", "KD3900"),
(1103, "Aruvi","Reddy", "aruvi@gmail.com", "PQ8790"),
(1104, "Abhiram","Nandini", "abhiram@gmail.com", "LO5689"),
(1105, "Nandini","Ram", "nandini@gmail.com", "nb0254");
SELECT * FROM PASSENGER;

CREATE TABLE FLIGHT (FLIGHT_ID INT PRIMARY KEY,
FLIGHT_NUMBER VARCHAR(20) UNIQUE, 
DEPT_DATE_TIME DATETIME,
ARRIVAL_DATE_TIME DATETIME,
ORIGIN_CODE VARCHAR(3),
DESTIN_CODE VARCHAR(3),
AVAIL_SEAT INT,
FOREIGN KEY (ORIGIN_CODE) REFERENCES AIRPORT(AIRPORT_CODE),
FOREIGN KEY (DESTIN_CODE) REFERENCES AIRPORT(AIRPORT_CODE));
DESC FLIGHT;
INSERT INTO FLIGHT VALUES
(1568 ,'6E568','2024-10-25 10:0:0', '2024-10-25 13:0:0', 'Chn',  'NDL', 100),
(1068, '6E068', '2024-10-29 14:0:0', '2024-10-29 17:0:0' ,'NDL' ,'Chn', 150),
(1678, '6E678','2024-10-24 6:20:0','2024-10-24 8:40:0', 'Chn', 'Mum', 140),
(1768, '6E768', '2024-10-27 8:0:0', '2024-10-27 10:0:0', 'Mum','Chn', 120),
(1888 ,'6E888','2024-10-25 9:0:0','2024-10-25 11:0:0' ,'Hyd', 'NDL', 100),
(1988, '6E988','2024-10-25 15:0:0','2024-10-25 17:0:0' ,'NDL', 'Hyd', 100);
SELECT * FROM FLIGHT;

CREATE TABLE Booking
(Booking_ID INT PRIMARY KEY ,
FLIGHT_ID INT ,
PASS_ID INT ,
Payment_Status VARCHAR(20),
FOREIGN KEY (FLIGHT_ID) REFERENCES Flight(FLIGHT_ID),
FOREIGN KEY (PASS_ID) REFERENCES Passenger(PASS_ID));

-- 2
INSERT INTO BOOKING VALUES 
(24001, 1568 ,1100 ,'Paid'),
(24002 ,1068 ,1100,'Paid'),
(24003, 1678 ,1101, 'Paid'),
(24004 ,1768 ,1101,'Pending'),
(24005, 1888 ,1102 ,'Paid'),
(24006 ,1988 ,1102,'Pending'),
(24007, 1988, 1103, 'Paid'),
(24008, 1888, 1103, 'Paid'),
(24009 ,1568 ,1104 ,'Paid'),
(24010, 1068, 1104,'Pending'),
(24011, 1678, 1105, 'Paid'),
(24012, 1768, 1105, 'Paid');

SELECT * FROM BOOKING;

CREATE TABLE PAYMENT (Payment_ID INT PRIMARY KEY ,
Booking_ID INT UNIQUE,
Payment_Method VARCHAR(50),
Amount DECIMAL(10, 2),
Transaction_DateTime DATETIME,
FOREIGN KEY (Booking_ID) REFERENCES Booking(Booking_ID));
DESC PAYMENT;

-- 2
INSERT INTO PAYMENT VALUES
(24102024, 24001, 'Net Banking', 7430,'2024-10-20'),
(24102025, 24002, 'Net Banking', 8030,'2024-10-20'),
(24102026, 24003, 'Net Banking', 6530,'2024-10-20'),
(24102027 ,24004, 'Net Banking', 8430,'2024-10-20'),
(24102028, 24005, 'Net Banking', 5020,'2024-10-19'),
(24102029, 24006, 'Net Banking', 7430,'2024-10-19'),
(24102030, 24007, 'Net Banking', 6430,'2024-10-18'),
(24102031, 24008, 'Net Banking', 7430,'2024-10-18'),
(24102032, 24009, 'Net Banking', 5430,'2024-10-17'),
(24102033, 24010, 'Net Banking', 6430,'2024-10-17'),
(24102034, 24011 ,'Net Banking', 4430,'2024-10-19'),
(24102035, 24012, 'Net Banking' ,5430,'2024-10-18');

SELECT * FROM PAYMENT;
-- 1
CREATE TABLE AIRPORT_costraints (
    AIRPORT_CODE VARCHAR(3) PRIMARY KEY,        
    AIRPORT_NAME VARCHAR(100) NOT NULL,         
    LOCATION VARCHAR(225) NOT NULL,            
    FACILITIES VARCHAR(225)                     
);
DESC AIRPORT_costraints;

CREATE TABLE AIRLINE_CONSTRAINTS (
    AIRLINE_ID INT PRIMARY KEY AUTO_INCREMENT,  -- Airline ID is the primary key, auto-incremented
    AIRLINE_NAME VARCHAR(100) NOT NULL,         -- Airline name cannot be null
    CONTACT_NUMBER VARCHAR(20) NOT NULL,        -- Contact number cannot be null
    OPERATING_REGION VARCHAR(100) NOT NULL      -- Operating region cannot be null
);
DESC AIRLINE_CONSTRAINTS;

-- 3 
SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME, f.FLIGHT_NUMBER, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME, f.ORIGIN_CODE, f.DESTIN_CODE
FROM PASSENGER p
JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID;

-- 3 UPDATED
SELECT f.FLIGHT_NUMBER, b.Booking_ID, CONCAT(p.FIRST_NAME, ' ', p.LAST_NAME) AS Passenger_Name, f.ORIGIN_CODE AS OriginAirportCode, f.DESTIN_CODE AS DestinationAirportCode, f.DEPT_DATE_TIME AS DepartureDateTime, f.ARRIVAL_DATE_TIME AS ArrivalDateTime, py.Amount AS TicketFare
FROM BOOKING b
JOIN PASSENGER p ON b.PASS_ID = p.PASS_ID
JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
JOIN PAYMENT py ON b.Booking_ID = py.Booking_ID;

-- 4 1105
SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME, f.FLIGHT_NUMBER, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME, f.ORIGIN_CODE, f.DESTIN_CODE
FROM PASSENGER p
JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
WHERE p.PASS_ID = 1105;

-- 4 UPDATED 
SELECT f.FLIGHT_NUMBER, b.Booking_ID, CONCAT(p.FIRST_NAME, ' ', p.LAST_NAME) AS Passenger_Name, f.ORIGIN_CODE AS OriginAirportCode, f.DESTIN_CODE AS DestinationAirportCode, f.DEPT_DATE_TIME AS DepartureDateTime, f.ARRIVAL_DATE_TIME AS ArrivalDateTime
FROM BOOKING b
JOIN PASSENGER p ON b.PASS_ID = p.PASS_ID
JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
WHERE p.PASS_ID = 1105;
-- 5
SELECT f.FLIGHT_ID, f.FLIGHT_NUMBER, a.AIRPORT_NAME, a.LOCATION
FROM FLIGHT f
JOIN AIRPORT a ON f.ORIGIN_CODE = a.AIRPORT_CODE OR f.DESTIN_CODE = a.AIRPORT_CODE;

-- 6
DELIMITER //

CREATE TRIGGER Update_Price_After
AFTER UPDATE ON PAYMENT
FOR EACH ROW
BEGIN
    IF NEW.Amount <> OLD.Amount THEN
        UPDATE PAYMENT
        SET Amount = NEW.Amount
        WHERE Payment_ID = NEW.Payment_ID;
    END IF;
END //

DELIMITER ;

UPDATE PAYMENT SET Amount = 200.00 WHERE Payment_ID = 1;

-- 7 
DELIMITER //
CREATE PROCEDURE CheckTicketStatus(IN passenger_id INT)
BEGIN
    SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME, b.Payment_Status
    FROM PASSENGER p
    JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
    WHERE p.PASS_ID = passenger_id;

    IF (SELECT b.Payment_Status FROM BOOKING b WHERE b.PASS_ID = passenger_id) = 'Paid' THEN
        SELECT 'Ticket is confirmed' AS Ticket_Status;
    ELSE
        SELECT 'Ticket is not confirmed' AS Ticket_Status;
    END IF;
END //
DELIMITER ;

CALL CheckTicketStatus(1103);

-- 8 
CREATE VIEW Indigo_Flights_NEW AS
SELECT f.FLIGHT_ID, f.FLIGHT_NUMBER, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME, f.ORIGIN_CODE, f.DESTIN_CODE
FROM FLIGHT f
JOIN AIRLINE a ON f.FLIGHT_ID = a.AIRLINE_ID
#WHERE a.AIRLINE_NAME = 'Chennai airport';
WHERE a.AIRLINE_ID = 4000;

CREATE VIEW Indigo_Flights_NEW2 AS
SELECT f.FLIGHT_ID, f.FLIGHT_NUMBER, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME, f.ORIGIN_CODE, f.DESTIN_CODE
FROM FLIGHT f
JOIN AIRLINE a ON f.FLIGHT_ID = a.AIRLINE_ID
WHERE a.AIRLINE_NAME = 'Indigo';
#WHERE a.AIRLINE_ID = 4000;

SELECT * FROM Indigo_Flights_NEW2;

-- 9
SELECT PASS_ID, FIRST_NAME, LAST_NAME, MAX(Total_Travel_Time) AS Max_Travel_Time
FROM (
    SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME,
           SUM(TIMESTAMPDIFF(MINUTE, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME)) AS Total_Travel_Time
    FROM PASSENGER p
    JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
    JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
    GROUP BY p.PASS_ID, p.FIRST_NAME, p.LAST_NAME
) AS Passenger_Travel_Times
ORDER BY Max_Travel_Time DESC
LIMIT 1;

SELECT PASS_ID, FIRST_NAME, LAST_NAME, MAX(Total_Travel_Time) AS Max_Travel_Time
FROM (
    SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME,
           SUM(TIMESTAMPDIFF(MINUTE, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME)) AS Total_Travel_Time
    FROM PASSENGER p
    JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
    JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
    GROUP BY p.PASS_ID, p.FIRST_NAME, p.LAST_NAME
) AS Passenger_Travel_Times
ORDER BY Max_Travel_Time DESC
LIMIT 1;

SELECT PASS_ID, FIRST_NAME, LAST_NAME, Total_Travel_Time
FROM (
    SELECT p.PASS_ID, p.FIRST_NAME, p.LAST_NAME,
           SUM(TIMESTAMPDIFF(MINUTE, f.DEPT_DATE_TIME, f.ARRIVAL_DATE_TIME)) AS Total_Travel_Time
    FROM PASSENGER p
    JOIN BOOKING b ON p.PASS_ID = b.PASS_ID
    JOIN FLIGHT f ON b.FLIGHT_ID = f.FLIGHT_ID
    GROUP BY p.PASS_ID, p.FIRST_NAME, p.LAST_NAME
) AS Passenger_Travel_Times
ORDER BY Total_Travel_Time DESC
LIMIT 1;



