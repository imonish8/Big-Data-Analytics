CREATE DATABASE LAB_QP;
USE LAB_QP;
CREATE TABLE EMPLOYEE (EMP_ID INT PRIMARY KEY, FIRST_NAME VARCHAR(20), LAST_NAME VARCHAR(20), PH_NUMBER VARCHAR(20), DATE_OF_BIRTH DATE, 
HIRE_DATE DATE, JOB_ID VARCHAR(10), SALARY INT,Experience INT, COMMISION INT, MANAGER_ID INT, DEPT_ID VARCHAR(10));
DESCRIBE EMPLOYEE;
DROP TABLE EMPLOYEE;
CREATE TABLE DEPARTMENT (DEPT_ID INT PRIMARY KEY, DEPT_NAME VARCHAR(25), LOCATION VARCHAR(20)); 
DESCRIBE DEPARTMENT;
CREATE TABLE  JOBS (JOB_ID VARCHAR(20) PRIMARY KEY,JOB_TITLE VARCHAR(20), MIN_SALARY INT, MAX_SALARY INT);
DESCRIBE JOBS;

INSERT INTO EMPLOYEE VALUES 
(100, 'Neena', 'Kochhar', '33333333', '1975-01-04', '1995-08-20', '1001',50000,22, 0,1002, 20),
(101, 'Lex', 'De Haan', '4444444', '1982-05-10', '2005-06-01', '1001',50000,17, 0,1002, 20),
(102, 'Alexander', 'Hunold', '55555555', '1977-10-14', '2007-04-01', '1001',50000,15, 0,1002, 20),
(103, 'Bruce', 'Ernst', '6666666', '1967-03-07', '1990-07-01', '1004',25000,32, 0,1002, 40),
(104, 'David', 'Austin', '77777777', '1986-03-02', '2018-05-08', '1005',15000,4, 0,1002, 50),
(105, 'Valli', 'Pataballa', '88888888', '1990-02-17', '2015-07-10', '1003',40000,7, 0,1003, 30),
(106, 'Diana', 'Lorentz', '11111111', '1996-02-20', '2021-12-01', '1001',60000,1, 0,1002, 20);

INSERT INTO JOBS VALUES
("1001", "Officer", 8000, 50000),
("1002", "Manager", 8000, 60000),
("1003", "Admin", 8000, 40000),
("1004", "Security", 5000, 25000),
("1005", "Office Boy", 5000, 15000);

INSERT INTO DEPARTMENT VALUES
(20, "Research and Development", "Mumbai"),
(30, "Administration", "Mumbai"),
(40, "Security", "Mumbai"),
(50, "Helper", "Mumbai"),
(60, "Finance", "Mumbai"),
(70, "Quality Assurance", "Mumbai");

# OUTPUT Q-2
SELECT * FROM EMPLOYEE;
SELECT * FROM JOBS;
SELECT * FROM DEPARTMENT;


# first, ph, date_birth, location = not null,
ALTER TABLE EMPLOYEE CHANGE FIRST_NAME FIRST_NAME VARCHAR(20) NOT NULL;
ALTER TABLE EMPLOYEE CHANGE PH_NUMBER PH_NUMBER VARCHAR(20)  NOT NULL;
# ALTER TABLE EMPLOYEE CHANGE DATE_OF_BIRTH DATE_OF_BIRTH DATE NOT NULL;
ALTER TABLE DEPARTMENT CHANGE LOCATION LOCATION VARCHAR(20) NOT NULL;

#experience, hiredate, date of birth , dept name, title > unique
ALTER TABLE EMPLOYEE CHANGE DATE_OF_BIRTH DATE_OF_BIRTH DATE NOT NULL UNIQUE;
ALTER TABLE DEPARTMENT CHANGE DEPT_NAME DEPT_NAME VARCHAR(25) UNIQUE ;
ALTER TABLE EMPLOYEE CHANGE  HIRE_DATE HIRE_DATE DATE UNIQUE;
ALTER TABLE JOBS CHANGE JOB_TITLE JOB_TITLE VARCHAR(20) UNIQUE;
ALTER TABLE EMPLOYEE CHANGE  Experience Experience INT UNIQUE;

# CHECK MAX_SALARY <= 60000, MIN_SALARY >=4000,
ALTER TABLE JOBS CHANGE MAX_SALARY  MAX_SALARY INT CHECK (MAX_SALARY <= 60000);
ALTER TABLE JOBS CHANGE MIN_SALARY  MIN_SALARY INT CHECK (MIN_SALARY >= 4000);


# FOREIGN KEY

ALTER TABLE  EMPLOYEE  ADD  CONSTRAINT DEPT_NAME FOREIGN KEY (DEPT_NAME) REFERENCES DEPARTMENT(DEPT_NAME);
-- ALTER TABLE DEPARTMENT 

# OUTPUT FOR Q-1
DESCRIBE EMPLOYEE;
DESCRIBE JOBS;
DESCRIBE DEPARTMENT;

#OUTPUT Q-3 A 

SELECT EMP_ID, FIRST_NAME, LAST_NAME, FLOOR(DATEDIFF(CURDATE(),DATE_OF_BIRTH) / 365) AS AGE FROM EMPLOYEE;


# OUTPUT Q-3B

SELECT EMPLOYEE.EMP_ID, EMPLOYEE.FIRST_NAME, EMPLOYEE.LAST_NAME, DEPARTMENT.DEPT_NAME, EMPLOYEE.SALARY FROM DEPARTMENT LEFT JOIN EMPLOYEE ON DEPARTMENT.DEPT_ID = EMPLOYEE.DEPT_ID;

#OUT PUT Q-3 C
SELECT  EMP_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEE WHERE  (FLOOR(DATEDIFF(CURDATE(),DATE_OF_BIRTH) / 365)) >= 60;

# 3D
SELECT DEPARTMENT.DEPT_ID,DEPARTMENT.DEPT_NAME, EMPLOYEE.FIRST_NAME FROM EMPLOYEE  RIGHT JOIN  DEPARTMENT ON EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID WHERE EMPLOYEE.DEPT_ID IS NULL;

# 3E
SELECT EMPLOYEE.EMP_ID, EMPLOYEE.FIRST_NAME,JOBS.JOB_TITLE, EMPLOYEE.SALARY FROM EMPLOYEE 
INNER JOIN JOBS  ON EMPLOYEE.JOB_ID  = JOBS.JOB_ID 
INNER JOIN DEPARTMENT ON EMPLOYEE.DEPT_ID = DEPARTMENT.DEPT_ID 
WHERE DEPARTMENT.DEPT_NAME = 'Research and Development';

#3F 
UPDATE  EMPLOYEE SET COMMISION = 1 WHERE  Experience >= 10;
SELECT * FROM EMPLOYEE;


DELIMITER //

CREATE PROCEDURE _PRINT_()
BEGIN
	DECLARE DONE INT DEFAULT FALSE;
    DECLARE COUNT INT DEFAULT 100 ;
    DECLARE FINAL VARCHAR(500);
    DECLARE FIRST_NAME VARCHAR(100);
    DECLARE RESULT VARCHAR(1000);
    DECLARE DEPT_NAME VARCHAR(100);
    DECLARE ECURSOR CURSOR FOR
    SELECT  EMPLOYEE.FIRST_NAME, DEPARTMENT.DEPT_NAME FROM EMPLOYEE INNER JOIN DEPARTMENT ON DEPARTMENT.DEPT_ID = EMPLOYEE.DEPT_ID;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET DONE = TRUE;
    OPEN ECURSOR;
    PRINT_ : LOOP
		FETCH ECURSOR INTO FIRST_NAME, DEPT_NAME;
        
        IF DONE THEN 
        LEAVE PRINT_;
        END IF;
        
		
        SET FINAL = FINAL + RESULT;
        SELECT CONCAT('EMPLOYEE',COUNT," : ", FIRST_NAME, ' , ', DEPT_NAME) AS RESULT;
        SET COUNT = COUNT + 1;
        END LOOP;
        
        CLOSE ECURSOR;
        END //
        
DELIMITER ;


CALL _PRINT_();
DROP PROCEDURE _PRINT_;

SELECT * FROM EMPLOYEE;


#8 


CREATE VIEW Employee_Details AS
SELECT e.FIRST_NAME AS FIRST_NAME, d.DEPT_NAME, j.JOB_TITLE, MAX(salary) AS Max_Salary
FROM Employee e
INNER JOIN Jobs j ON e.job_id = j.job_id
INNER JOIN Department d ON e.Dept_id = d.dept_id
GROUP BY e.dept_id;

SELECT EMPLOYEE_DETAILS;